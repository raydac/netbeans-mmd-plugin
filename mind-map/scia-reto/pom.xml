<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.igormaznitsa</groupId>
    <artifactId>mind-map</artifactId>
      <version>1.6.7-SNAPSHOT</version>
  </parent>

  <artifactId>scia-reto</artifactId>
  <packaging>jar</packaging>

  <name>SciaReto Mind Map Editor</name>
  <description>Standalone editor to create, show and edit mind maps</description>

  <licenses>
    <license>
      <name>GNU Lesser General Public License 3.0</name>
      <url>https://www.gnu.org/licenses/lgpl-3.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <app.name>sciareto-${project.version}</app.name>
    <jre.version>21.0.2+14</jre.version>
    <maven.compiler.source>9</maven.compiler.source>
    <maven.compiler.target>9</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.igormaznitsa</groupId>
      <artifactId>meta-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.igormaznitsa</groupId>
      <artifactId>meta-utils</artifactId>
    </dependency>
    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-core</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sf.jung</groupId>
      <artifactId>jung-graph-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fifesoft</groupId>
      <artifactId>rsyntaxtextarea</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fifesoft</groupId>
      <artifactId>autocomplete</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.fifesoft</groupId>
          <artifactId>rsyntaxtextarea</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>net.sf.jung</groupId>
      <artifactId>jung-visualization</artifactId>
    </dependency>
    <dependency>
      <groupId>com.igormaznitsa</groupId>
      <artifactId>mind-map-ide-common</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.igormaznitsa</groupId>
      <artifactId>mind-map-swing-panel</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
      <version>1.26.0</version>
    </dependency>
    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna</artifactId>
    </dependency>
    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna-platform</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.elk</groupId>
      <artifactId>org.eclipse.elk.core</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.eclipse.elk</groupId>
      <artifactId>org.eclipse.elk.alg.layered</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.elk</groupId>
      <artifactId>org.eclipse.elk.alg.mrtree</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.plantuml</groupId>
      <artifactId>plantuml</artifactId>
    </dependency>
    <dependency>
      <groupId>org.scilab.forge</groupId>
      <artifactId>jlatexmath</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-dom</artifactId>
      <exclusions>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-svggen</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-transcoder</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-codec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.formdev</groupId>
      <artifactId>flatlaf</artifactId>
    </dependency>
    <dependency>
      <groupId>com.formdev</groupId>
      <artifactId>flatlaf-intellij-themes</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-streams</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>


  <profiles>
    <profile>
      <id>publish</id>
      <dependencies>
        <dependency>
          <groupId>com.igormaznitsa</groupId>
          <artifactId>scia-reto-win-launcher</artifactId>
          <version>${project.version}</version>
          <type>mvn-golang</type>
          <scope>provided</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>de.perdian.maven.plugins</groupId>
            <artifactId>macosappbundler-maven-plugin</artifactId>
            <configuration>
              <plist>
                <CFBundleIconFile>icon.icns</CFBundleIconFile>
                <CFBundleDisplayName>SciaReto</CFBundleDisplayName>
                <CFBundleDevelopmentRegion>English</CFBundleDevelopmentRegion>
                <CFBundleURLTypes>
                  <string>msa</string>
                </CFBundleURLTypes>
                <JVMVersion>9+</JVMVersion>
                <JVMMainClassName>SciaReto</JVMMainClassName>
              </plist>
              <dmg>
                <generate>true</generate>
                <autoFallback>true</autoFallback>
                <appendVersion>false</appendVersion>
                <dmgFileName>${project.build.finalName}-macos</dmgFileName>
              </dmg>
              <app>
                <additionalResources>
                  <resource>
                    <directory>${project.basedir}/src/assembly/common</directory>
                    <outputDirectory>Contents/Resources</outputDirectory>
                    <includes>
                      <include>**</include>
                    </includes>
                  </resource>
                </additionalResources>
              </app>
            </configuration>
            <executions>
              <execution>
                <id>make-macos-bundle</id>
                <phase>package</phase>
                <goals>
                  <goal>bundle</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.igormaznitsa</groupId>
            <artifactId>mvn-jlink-wrapper</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <id>cache-work-jdk</id>
                <goals>
                  <goal>cache-jdk</goal>
                </goals>
                <configuration>
                  <jdkPathProperty>mvnjlink.jdk.work.path</jdkPathProperty>
                  <provider>BELLSOFT</provider>
                  <providerConfig>
                    <version>${jre.version}</version>
                    <type>jdk</type>
                    <arch>amd64</arch>
                  </providerConfig>
                </configuration>
              </execution>
              <execution>
                <id>cache-linux-jdk</id>
                <goals>
                  <goal>cache-jdk</goal>
                </goals>
                <configuration>
                  <jdkPathProperty>mvnjlink.jdk.linux.path</jdkPathProperty>
                  <provider>BELLSOFT</provider>
                  <providerConfig>
                    <os>linux</os>
                    <version>${jre.version}</version>
                    <type>jdk</type>
                    <arch>amd64</arch>
                  </providerConfig>
                </configuration>
              </execution>
              <execution>
                <id>cache-windows-jdk</id>
                <goals>
                  <goal>cache-jdk</goal>
                </goals>
                <configuration>
                  <jdkPathProperty>mvnjlink.jdk.windows.path</jdkPathProperty>
                  <provider>BELLSOFT</provider>
                  <providerConfig>
                    <os>windows</os>
                    <version>${jre.version}</version>
                    <type>jdk</type>
                    <arch>amd64</arch>
                  </providerConfig>
                </configuration>
              </execution>
              <execution>
                <id>cache-macos-jdk</id>
                <goals>
                  <goal>cache-jdk</goal>
                </goals>
                <configuration>
                  <jdkPathProperty>mvnjlink.jdk.macos.path</jdkPathProperty>
                  <provider>BELLSOFT</provider>
                  <providerConfig>
                    <os>macos</os>
                    <version>${jre.version}</version>
                    <type>jdk</type>
                    <arch>amd64</arch>
                  </providerConfig>
                </configuration>
              </execution>
              <execution>
                <id>cache-macos-jdk-aarch64</id>
                <goals>
                  <goal>cache-jdk</goal>
                </goals>
                <configuration>
                  <jdkPathProperty>mvnjlink.jdk.macos.aarch64.path</jdkPathProperty>
                  <provider>BELLSOFT</provider>
                  <providerConfig>
                    <os>macos</os>
                    <version>${jre.version}</version>
                    <type>jdk</type>
                    <arch>aarch64</arch>
                  </providerConfig>
                </configuration>
              </execution>
              <execution>
                <id>call-jdeps</id>
                <goals>
                  <goal>jdeps</goal>
                </goals>
                <configuration>
                  <toolJdk>${mvnjlink.jdk.work.path}</toolJdk>
                  <output>${project.build.directory}${file.separator}jdeps.out</output>
                  <options>
                    <option>-s</option>
                    <option>${project.build.directory}${file.separator}${project.build.finalName}.jar</option>
                  </options>
                </configuration>
              </execution>
              <execution>
                <id>make-jre-linux</id>
                <goals>
                  <goal>jlink</goal>
                </goals>
                <configuration>
                  <toolJdk>${mvnjlink.jdk.work.path}</toolJdk>
                  <jdepsReportPath>${project.build.directory}${file.separator}jdeps.out</jdepsReportPath>
                  <output>${project.build.directory}${file.separator}jre_linux_amd64</output>
                  <modulePaths>
                    <path>${mvnjlink.jdk.linux.path}${file.separator}jmods</path>
                  </modulePaths>
                  <options>
                    <option>--compress=2</option>
                    <option>--no-header-files</option>
                    <option>--no-man-pages</option>
                  </options>
                  <addModules>
                    <module>jdk.xml.dom</module>
                    <module>jdk.localedata</module>
                    <module>jdk.crypto.ec</module>
                    <module>jdk.crypto.cryptoki</module>
                  </addModules>
                </configuration>
              </execution>
              <execution>
                <id>make-jre-windows</id>
                <goals>
                  <goal>jlink</goal>
                </goals>
                <configuration>
                  <toolJdk>${mvnjlink.jdk.work.path}</toolJdk>
                  <jdepsReportPath>${project.build.directory}${file.separator}jdeps.out</jdepsReportPath>
                  <output>${project.build.directory}${file.separator}jre_windows_amd64</output>
                  <modulePaths>
                    <path>${mvnjlink.jdk.windows.path}${file.separator}jmods</path>
                  </modulePaths>
                  <options>
                    <option>--compress=2</option>
                    <option>--no-header-files</option>
                    <option>--no-man-pages</option>
                  </options>
                  <addModules>
                    <module>jdk.xml.dom</module>
                    <module>jdk.localedata</module>
                    <module>jdk.crypto.ec</module>
                    <module>jdk.crypto.cryptoki</module>
                  </addModules>
                </configuration>
              </execution>
              <execution>
                <id>make-jre-macos</id>
                <goals>
                  <goal>jlink</goal>
                </goals>
                <configuration>
                  <toolJdk>${mvnjlink.jdk.work.path}</toolJdk>
                  <jdepsReportPath>${project.build.directory}${file.separator}jdeps.out</jdepsReportPath>
                  <output>${project.build.directory}${file.separator}jre_macos_amd64</output>
                  <modulePaths>
                    <path>${mvnjlink.jdk.macos.path}${file.separator}jmods</path>
                  </modulePaths>
                  <options>
                    <option>--compress=2</option>
                    <option>--no-header-files</option>
                    <option>--no-man-pages</option>
                  </options>
                  <addModules>
                    <module>jdk.xml.dom</module>
                    <module>jdk.localedata</module>
                    <module>jdk.crypto.ec</module>
                    <module>jdk.crypto.cryptoki</module>
                  </addModules>
                </configuration>
              </execution>
              <execution>
                <id>make-macos-jre-aarch64</id>
                <goals>
                  <goal>jlink</goal>
                </goals>
                <configuration>
                  <toolJdk>${mvnjlink.jdk.work.path}</toolJdk>
                  <jdepsReportPath>${project.build.directory}${file.separator}jdeps.out</jdepsReportPath>
                  <output>${project.build.directory}${file.separator}jre_macos_aarch64</output>
                  <modulePaths>
                    <path>${mvnjlink.jdk.macos.aarch64.path}${file.separator}jmods</path>
                  </modulePaths>
                  <options>
                    <option>--compress=2</option>
                    <option>--no-header-files</option>
                    <option>--no-man-pages</option>
                  </options>
                  <addModules>
                    <module>jdk.xml.dom</module>
                    <module>jdk.localedata</module>
                    <module>jdk.crypto.ec</module>
                    <module>jdk.crypto.cryptoki</module>
                  </addModules>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.akathist.maven.plugins.launch4j</groupId>
            <artifactId>launch4j-maven-plugin</artifactId>
            <configuration>
              <headerType>gui</headerType>
              <outfile>${project.build.directory}/${app.name}.exe</outfile>
              <downloadUrl>https://bell-sw.com/pages/downloads/#/java-11-lts</downloadUrl>
              <classPath>
                <mainClass>SciaReto</mainClass>
                <preCp>anything</preCp>
              </classPath>
              <icon>
                ${project.basedir}${file.separator}src${file.separator}assembly${file.separator}windows${file.separator}app.ico
              </icon>
              <singleInstance>
                <mutexName>sciaretoeditor</mutexName>
              </singleInstance>
              <versionInfo>
                <fileVersion>${project.version.raw}.0</fileVersion>
                <txtFileVersion>${project.version}</txtFileVersion>
                <fileDescription>SciaReto Mind Map editor</fileDescription>
                <copyright>2016-2024 Igor Maznitsa</copyright>
                <productVersion>${project.version.raw}.0</productVersion>
                <txtProductVersion>${project.version}</txtProductVersion>
                <productName>${project.name}</productName>
                <companyName>igormaznitsa.com</companyName>
                <internalName>${project.name}</internalName>
                <originalFilename>${app.name}.exe</originalFilename>
              </versionInfo>
            </configuration>
            <executions>
              <execution>
                <id>l4j-only-starter-installed-path</id>
                <phase>install</phase>
                <goals>
                  <goal>launch4j</goal>
                </goals>
                <configuration>
                  <outfile>${project.build.directory}${file.separator}${app.name}-nojre.exe</outfile>
                  <dontWrapJar>true</dontWrapJar>
                  <jar>scia-reto.jar</jar>
                  <jre>
                    <minVersion>9</minVersion>
                    <path>%VAR%</path>
                    <opts>
                      <opt>-Xmx2G</opt>
                    </opts>
                  </jre>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>make-linux</id>
                <phase>install</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <appendAssemblyId>false</appendAssemblyId>
                  <finalName>${app.name}-linux-jdk-amd64</finalName>
                  <descriptors>
                    <descriptor>src/assembly/linux-amd64.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
              <execution>
                <id>make-linux-nojre</id>
                <phase>install</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <appendAssemblyId>false</appendAssemblyId>
                  <finalName>${app.name}-linux</finalName>
                  <descriptors>
                    <descriptor>src${file.separator}assembly${file.separator}linux-nojre.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
              <execution>
                <id>make-windows</id>
                <phase>install</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <appendAssemblyId>false</appendAssemblyId>
                  <finalName>${app.name}-windows-jdk-amd64</finalName>
                  <descriptors>
                    <descriptor>src/assembly/windows-amd64.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
              <execution>
                <id>make-windows-nojre</id>
                <phase>install</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <appendAssemblyId>false</appendAssemblyId>
                  <finalName>${app.name}-windows</finalName>
                  <descriptors>
                    <descriptor>src${file.separator}assembly${file.separator}windows-nojre.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
              <execution>
                <id>make-mac</id>
                <phase>install</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <appendAssemblyId>false</appendAssemblyId>
                  <finalName>${project.build.finalName}-macos-jdk-amd64</finalName>
                  <descriptors>
                    <descriptor>src/assembly/mac-amd64.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
              <execution>
                <id>make-mac-aarch64</id>
                <phase>install</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <appendAssemblyId>false</appendAssemblyId>
                  <finalName>${project.build.finalName}-macos-jdk-aarch64</finalName>
                  <descriptors>
                    <descriptor>src/assembly/mac-aarch64.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
              <execution>
                <id>make-mac-nojre</id>
                <phase>install</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <appendAssemblyId>false</appendAssemblyId>
                  <finalName>${project.build.finalName}-macos</finalName>
                  <descriptors>
                    <descriptor>src${file.separator}assembly${file.separator}mac-nojre.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>truezip-maven-plugin</artifactId>
            <version>1.2</version>
            <executions>
              <execution>
                <id>remove-manifest-from-mac-amd64-jar</id>
                <goals>
                  <goal>remove</goal>
                </goals>
                <phase>install</phase>
                <configuration>
                  <fileset>
                    <directory>
                      ${project.build.directory}${file.separator}${project.build.finalName}-macos-jdk-amd64.jar${file.separator}META-INF
                    </directory>
                  </fileset>
                </configuration>
              </execution>
              <execution>
                <id>remove-manifest-from-mac-aarch64-jar</id>
                <goals>
                  <goal>remove</goal>
                </goals>
                <phase>install</phase>
                <configuration>
                  <fileset>
                    <directory>
                      ${project.build.directory}${file.separator}${project.build.finalName}-macos-jdk-aarch64.jar${file.separator}META-INF
                    </directory>
                  </fileset>
                </configuration>
              </execution>
              <execution>
                <id>remove-manifest-from-mac-nojdk-jar</id>
                <goals>
                  <goal>remove</goal>
                </goals>
                <phase>install</phase>
                <configuration>
                  <fileset>
                    <directory>
                      ${project.build.directory}${file.separator}${project.build.finalName}-macos.jar${file.separator}META-INF
                    </directory>
                  </fileset>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.coderplus.maven.plugins</groupId>
            <artifactId>copy-rename-maven-plugin</artifactId>
            <version>1.0.1</version>
            <executions>
              <execution>
                <id>rename-mac-jar-to-zip</id>
                <phase>install</phase>
                <goals>
                  <goal>rename</goal>
                </goals>
                <configuration>
                  <sourceFile>
                    ${project.build.directory}${file.separator}${project.build.finalName}-macos-jdk-amd64.jar
                  </sourceFile>
                  <destinationFile>
                    ${project.build.directory}${file.separator}${project.build.finalName}-macos-jdk-amd64.zip
                  </destinationFile>
                </configuration>
              </execution>
              <execution>
                <id>rename-mac-aarch64-jar-to-zip</id>
                <phase>install</phase>
                <goals>
                  <goal>rename</goal>
                </goals>
                <configuration>
                  <sourceFile>
                    ${project.build.directory}${file.separator}${project.build.finalName}-macos-jdk-aarch64.jar
                  </sourceFile>
                  <destinationFile>
                    ${project.build.directory}${file.separator}${project.build.finalName}-macos-jdk-aarch64.zip
                  </destinationFile>
                </configuration>
              </execution>
              <execution>
                <id>rename-mac-nojre-jar-to-zip</id>
                <phase>install</phase>
                <goals>
                  <goal>rename</goal>
                </goals>
                <configuration>
                  <sourceFile>${project.build.directory}${file.separator}${project.build.finalName}-macos.jar
                  </sourceFile>
                  <destinationFile>${project.build.directory}${file.separator}${project.build.finalName}-macos.zip
                  </destinationFile>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-clean-plugin</artifactId>
            <executions>
              <execution>
                <id>clean-temp</id>
                <phase>install</phase>
                <goals>
                  <goal>clean</goal>
                </goals>
                <configuration>
                  <excludeDefaultDirectories>true</excludeDefaultDirectories>
                  <filesets>
                    <fileset>
                      <directory>${project.build.directory}</directory>
                      <includes>
                        <include>original-sciareto-*.jar</include>
                        <include>${app.name}.exe</include>
                        <include>${app.name}-nojre.exe</include>
                        <include>jdeps.out</include>
                      </includes>
                    </fileset>
                  </filesets>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>appimage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>prepare-appimage-folder</id>
                <phase>install</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}${file.separator}${project.build.finalName}-x86_64</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${project.build.directory}${file.separator}jre_linux_amd64</directory>
                      <targetPath>jre</targetPath>
                      <filtering>false</filtering>
                      <excludes>
                        <exclude>**/ASSEMBLY_EXCEPTION</exclude>
                        <exclude>**/ADDITIONAL_LICENSE_INFO</exclude>
                        <exclude>**/LICENSE</exclude>
                        <exclude>**/cldr.md</exclude>
                      </excludes>
                    </resource>
                    <resource>
                      <directory>${project.basedir}${file.separator}src${file.separator}assembly${file.separator}common</directory>
                      <filtering>false</filtering>
                    </resource>
                    <resource>
                      <directory>${project.basedir}${file.separator}src${file.separator}assembly${file.separator}linux-appimage</directory>
                      <filtering>false</filtering>
                    </resource>
                    <resource>
                      <directory>${project.build.directory}</directory>
                      <includes>
                        <include>${project.build.finalName}.jar</include>
                      </includes>
                      <filtering>false</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>permissions-in-appimage-folder-apprun</id>
                <phase>install</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>chmod</executable>
                  <arguments>
                    <arg>0755</arg>
                    <arg>AppRun</arg>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>permissions-in-appimage-folder-java</id>
                <phase>install</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>chmod</executable>
                  <arguments>
                    <arg>0755</arg>
                    <arg>jre${file.separator}bin${file.separator}java</arg>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>make-appimage-linux-amd64</id>
                <phase>install</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>${project.build.directory}</workingDirectory>
                  <executable>appimagetool</executable>
                  <arguments>
                    <arg>.${file.separator}${project.build.finalName}-x86_64</arg>
                    <arg>${project.build.finalName}-x86_64.AppImage</arg>
                  </arguments>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <workingDirectory>${project.build.directory}${file.separator}${project.build.finalName}-x86_64</workingDirectory>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <finalName>${app.name}</finalName>
    <plugins>
      <plugin>
        <groupId>com.igormaznitsa</groupId>
        <artifactId>mvn-golang-wrapper</artifactId>
        <version>2.3.10</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.2.0</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <mainClass>SciaReto</mainClass>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
            <manifestEntries>
              <Application-Name>Scia Reto</Application-Name>
              <Automatic-Module-Name>igormaznitsa.sciareto</Automatic-Module-Name>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/eclipse.inf</exclude>
                    <exclude>META-INF/LICENSE</exclude>
                    <exclude>META-INF/MANIFEST.MF</exclude>
                    <exclude>about.*</exclude>
                    <exclude>plugin.*</exclude>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                    <exclude>META-INF/NOTICE.txt</exclude>
                    <exclude>META-INF/NOTICE</exclude>
                    <exclude>META-INF/LICENSE.txt</exclude>
                    <exclude>META-INF/license</exclude>
                    <exclude>META-INF/AL2.0</exclude>
                    <exclude>META-INF/LGPL2.1</exclude>
                    <exclude>META-INF/COPYING</exclude>
                    <exclude>modeling32.png</exclude>
                  </excludes>
                </filter>
              </filters>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>SciaReto</mainClass>
                </transformer>
              </transformers>
              <minimizeJar>false</minimizeJar>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.igormaznitsa</groupId>
        <artifactId>meta-checker</artifactId>
        <executions>
          <execution>
            <id>meta-check</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <restrictClassFormat>9</restrictClassFormat>
              <checkMayContainNull>true</checkMayContainNull>
              <checkNullable>true</checkNullable>
              <ignoreClasses>
                <ignore>*.KStreamsTopologyTokenMaker</ignore>
                <ignore>*.DotScriptTokenMaker</ignore>
                <ignore>*.NoteEditor</ignore>
                <ignore>*.ColorAttributePanel</ignore>
                <ignore>*.UriEditPanel</ignore>
                <ignore>*.FileEditPanel</ignore>
                <ignore>*$*</ignore>
                <ignore>*.MainFrame</ignore>
                <ignore>*.MindMapTreePanel</ignore>
                <ignore>*.AboutPanel</ignore>
                <ignore>*.FontSelector</ignore>
                <ignore>*.KeyShortCutEditPanel</ignore>
                <ignore>*.PreferencesPanel</ignore>
                <ignore>*.GoToFilePanel</ignore>
                <ignore>*.FindTextPanel</ignore>
                <ignore>*.FindFilesForTextPanel</ignore>
                <ignore>*.SysFileExtensionEditorPanel</ignore>
              </ignoreClasses>
            </configuration>
          </execution>
          <execution>
            <id>meta-check-java-version-in-result-jar</id>
            <goals>
              <goal>check-jar</goal>
            </goals>
            <configuration>
              <manifestHas>
                <key>Main-Class</key>
              </manifestHas>
              <restrictClassFormat><![CDATA[<=9]]></restrictClassFormat>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
